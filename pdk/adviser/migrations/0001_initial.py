# Generated by Django 2.0 on 2018-07-10 08:45

import ckeditor_uploader.fields
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='adviser_user',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tel', models.CharField(blank=True, max_length=11, null=True, verbose_name='联系电话')),
                ('thumbnail', models.ImageField(blank=True, default='100user.png', help_text='图片尺寸：180 * 180', upload_to='adviser_user/%Y/%m/', verbose_name='头像')),
                ('profession', models.CharField(default='跑得快企服超市商务', help_text='请输入小于15个字的职位介绍', max_length=30, verbose_name='职位')),
                ('serve', models.CharField(default='跑得快,助推企业跑得更快', help_text='请输入小于40个字的服务范围', max_length=30, verbose_name='服务范围')),
                ('excerpt', models.TextField(blank=True, help_text='请务必填写', max_length=200, null=True, verbose_name='简要介绍')),
                ('body', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='个人介绍')),
                ('count_con', models.PositiveIntegerField(default=1, verbose_name='咨询量')),
                ('count_order', models.PositiveIntegerField(default=1, verbose_name='下单量')),
                ('superior', models.CharField(default=1, max_length=11, verbose_name='上级')),
                ('department', models.CharField(blank=True, default='空', max_length=200, verbose_name='部门')),
                ('position', models.CharField(blank=True, default='空', max_length=200, verbose_name='职位')),
                ('seo_title', models.CharField(blank=True, max_length=100, verbose_name='SEO标题')),
                ('keywords', models.CharField(blank=True, max_length=100, verbose_name='关键词')),
                ('show', models.CharField(choices=[('否', '不显示'), ('是', '显示')], default='否', max_length=10, verbose_name='是否显示顾问')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
